pipeline {
    agent any
    environment {
        GIT_CREDENTIALS_ID = credentials('github-PAT')
    }
    stages {
        stage('SCM') {
            steps {
                git url: 'https://github.com/Brayan-22/spring-boot-jenkins.git', branch: params.branch
                stash name: 'source', useDefaultExcludes: false
                script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "pending", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''               
                }
            }
        }
        stage('SonarQube Quality Test') {
            environment {
                scannerHome = tool 'Sonarqube'
            }
            tools {
                maven 'Maven'
            }
            steps {
                unstash 'source'
                withSonarQubeEnv(installationName: 'sq1') {
                    sh 'mvn clean package -DskipTests'
                    sh '${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=spring-test -Dsonar.java.binaries=target'
                }
            }
            post {
                failure {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "failure", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
                aborted {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "failure", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
            }
        }
        stage('SonarQube Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
            post {
                failure {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "failure", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
                aborted {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "failure", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
                success {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "success", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
            }
        }
        stage('Build'){
            tools {
                maven 'Maven'
            }
            steps {
                unstash 'source'
                sh 'mvn clean package -DskipTests'
            }
            post {
                failure {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "failure", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
                aborted {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "failure", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
                success {
                    script {
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "Current commit hash: ${commitHash}"
                    sh '''
                            export COMMIT_HASH='''+ commitHash +'''
                            curl -L \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer $GIT_CREDENTIALS_ID" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/Brayan-22/spring-boot-jenkins/statuses/$COMMIT_HASH \
                            -d '{"state": "success", "target_url": "'$BUILD_URL'", "description": "The build is in progress!", "context": "continuous-integration/jenkins"}'
                    '''  
                    }
                }
            }
        }
    }
}
